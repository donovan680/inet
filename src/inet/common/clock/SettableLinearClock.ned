//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.
//

package inet.common.clock;

import inet.common.clock.contract.IClock;

//
// Models a clock where the drift rate is constant.
//
simple SettableLinearClock like IClock
{
    //TODO IScriptable instead of handleParameterChange
    parameters:
        double timeShift @unit(s) = default(0s); // set the clock time to simtime + timeShift at initialize
        double driftRate @unit(ppm) = default(0ppm); // clock precision, expressed as a ratio in parts per million
        @display("i=block/timer");
}

